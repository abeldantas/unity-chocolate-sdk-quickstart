// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
**BUILD_SCRIPT_DEPS**}
}

allprojects {
    repositories {
        google()
        jcenter()
                 maven { url 'https://jitpack.io' }
    maven { url "https://adcolony.bintray.com/AdColony" }
    maven { url "https://dl.bintray.com/vdopiacorp/sdk" }
    maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
    maven { url 'https://tapjoy.bintray.com/maven' }
    // If you're using a version of Gradle greater than or equal to 4.1, you must use:
    google()

    // If you're using a version of Gradle lower than 4.1, you must use:
    maven { url 'https://maven.google.com' }
        flatDir {
            dirs 'libs'
        }
    }
}

apply plugin: 'com.android.application'
**APPLY_PLUGINS**

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
implementation 'com.vdopia.ads.lw:coresdk:2.8.0'
implementation 'com.vdopia.ads.lw:unity-plugin:1.2.2'
implementation 'com.vdopia.ads.lw:adcolony-adapter:3.3.10'
implementation 'com.adcolony:sdk:3.3.10'
implementation 'com.vdopia.ads.lw:amazon-adapter:1.0.2'
implementation 'com.amazon.android:mobile-ads:5.+'
implementation 'com.vdopia.ads.lw:applovin-adapter:9.4.2'
implementation 'com.applovin:applovin-sdk:9.4.2'
implementation 'com.vdopia.ads.lw:facebook-adapter:1.0.6'
implementation('com.facebook.android:audience-network-sdk:4.99.3') { 
   exclude group: 'com.google.android.exoplayer' 
}
implementation 'com.vdopia.ads.lw:google-adapter:16.0.0'
implementation 'com.google.android.ads.consent:consent-library:1.0.7'
implementation 'com.google.android.gms:play-services-ads:16.0.0'  //other versions 11.+ will work as well
implementation 'com.vdopia.ads.lw:inmobi-adapter:7.2.2'
implementation 'com.inmobi.monetization:inmobi-ads:7.2.2'
implementation 'com.vdopia.ads.lw:mopub-adapter:5.6.0'
implementation('com.mopub:mopub-sdk:5.6.0@aar') { transitive = true }
implementation 'com.vdopia.ads.lw:tapjoy-adapter:12.2.1'
implementation 'com.tapjoy:tapjoy-android-sdk:12.2.1@aar'
implementation 'com.vdopia.ads.lw:unity-adapter:1.2.0'
implementation 'com.vdopia.ads.lw:criteo-adapter:1.5.5.a'
implementation 'com.vdopia.ads.lw:vungle-adapter:1.0.8'
implementation 'com.github.vungle:vungle-android-sdk:6.3.24'
implementation 'com.vdopia.ads.lw:video-player:4.2.3'
implementation 'com.devbrackets.android:exomedia:4.2.3'
implementation 'com.squareup.picasso:picasso:2.5.2'


/* Important Note: if your Unity project is using Google Play Resolver plugin where you 
see a lot of android support and Google Play services aar files in the android libs folder, 
then you won't be needing any of the following dependencies, except for multidex, otherwise
you will get weird compilation/build issues due to same-library-conflicts.
You will only need the multidex line below.  Lastly, the version specified in the 
DependencyResolveDetails (below) would need to be the same version as the physical aar android 
support files in libs. */ 


//You do not have to use support library version 27.1.1, however, whichever version you do use
//must be the same throughout this gradle file.  This does not apply to multidex.
//Do not use '+' wildcards in the android support library version.
implementation "com.android.support:support-annotations:27.1.1"
implementation "com.android.support:appcompat-v7:27.1.1"
implementation "com.android.support:support-v4:27.1.1"
implementation "com.android.support:recyclerview-v7:27.1.1"
implementation 'com.android.support:multidex:1.0.3'
**DEPS**}
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                //Again, 27.1.1 is an example.  It is consistent throughout the file.
                details.useVersion("27.1.1")
            }
        }
    }
}
android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        applicationId '**APPLICATIONID**'
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
        multiDexEnabled true
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**]
    }**SIGN**

    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            useProguard **PROGUARD_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            useProguard **PROGUARD_RELEASE**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD****SIGNCONFIG**
        }
    }**PACKAGING_OPTIONS****SPLITS**
**BUILT_APK_LOCATION**
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}**SPLITS_VERSION_CODE****REPOSITORIES****SOURCE_BUILD_SETUP**
